%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.12.0.635 (R2011a). Operating System: Linux 3.16.0-28-generic #38-Ubuntu SMP Fri Dec 12 17:37:40 UTC 2014 x86_64.
%%Title: /media/files/cocolab/oed_py/sl_npart/result_a0.90_mc/count/comp.eps
%%CreationDate: 01/13/2015  13:50:46
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   145   276   465   516
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   145   276   465   516
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1740 6192 csm

    0     0  3840  2880 rc
89 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 3841 2881 rf
6 w
0 2339 2976 0 0 -2339 499 2555 4 MP
PP
-2976 0 0 2339 2976 0 0 -2339 499 2555 5 MP stroke
4 w
DO
SO
6 w
0 sg
 499 2555 mt 3475 2555 L
 499  216 mt 3475  216 L
 499 2555 mt  499  216 L
3475 2555 mt 3475  216 L
 499 2555 mt 3475 2555 L
 499 2555 mt  499  216 L
 499 2555 mt  499 2525 L
 499  216 mt  499  245 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

 466 2700 mt 
(0) s
 924 2555 mt  924 2525 L
 924  216 mt  924  245 L
 891 2700 mt 
(5) s
1349 2555 mt 1349 2525 L
1349  216 mt 1349  245 L
1283 2700 mt 
(10) s
1774 2555 mt 1774 2525 L
1774  216 mt 1774  245 L
1708 2700 mt 
(15) s
2199 2555 mt 2199 2525 L
2199  216 mt 2199  245 L
2133 2700 mt 
(20) s
2624 2555 mt 2624 2525 L
2624  216 mt 2624  245 L
2558 2700 mt 
(25) s
3049 2555 mt 3049 2525 L
3049  216 mt 3049  245 L
2983 2700 mt 
(30) s
3475 2555 mt 3475 2525 L
3475  216 mt 3475  245 L
3409 2700 mt 
(35) s
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 1937 mt  528 1937 L
3475 1937 mt 3445 1937 L
 243 1981 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 80 FMSR

 376 1907 mt 
(10) s
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 1249 mt  528 1249 L
3475 1249 mt 3445 1249 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

 243 1293 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 80 FMSR

 376 1219 mt 
(20) s
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499  560 mt  528  560 L
3475  560 mt 3445  560 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

 243  604 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 80 FMSR

 376  530 mt 
(30) s
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt  499 2555 L
 499 2555 mt 3475 2555 L
 499  216 mt 3475  216 L
 499 2555 mt  499  216 L
3475 2555 mt 3475  216 L
gs 499 216 2977 2340 rc
/c8 { 0.000000 0.600000 0.000000 sr} bdef
c8
85 -72 85 -71 85 -72 85 -72 85 -72 85 -71 85 -72 85 -72 
85 -71 85 -72 85 -72 85 -72 85 -71 85 -72 85 -72 85 -72 
85 -71 85 -72 85 -72 85 -71 85 -72 85 -72 85 -72 85 -71 
85 -72 85 -72 85 -72 85 -71 85 -72 85 -72 85 -72 584 2555 32 MP stroke
c4
85 -8 85 -8 85 -9 85 -9 85 -9 85 -9 85 -10 85 -10 
85 -11 85 -10 85 -12 85 -11 85 -12 85 -13 85 -13 85 -14 
85 -15 85 -15 85 -16 85 -17 85 -18 85 -19 85 -21 85 -23 
85 -24 85 -26 85 -30 85 -33 85 -37 85 -44 85 -54 584 2555 32 MP stroke
DA
/c9 { 0.600000 0.200000 0.200000 sr} bdef
c9
85 0 85 0 85 0 85 0 85 0 85 0 85 0 85 0 
85 0 85 0 85 0 85 0 85 0 85 0 85 0 85 0 
85 0 85 0 85 0 85 0 85 0 85 0 85 0 85 0 
85 0 85 -18 85 -30 85 -33 85 -37 85 -44 85 -54 584 2555 32 MP stroke
SO
/c10 { 0.800000 0.000000 0.000000 sr} bdef
c10
85 0 85 0 85 -1 85 0 85 0 85 0 85 -1 85 0 
85 0 85 -1 85 0 85 -1 85 -1 85 0 85 -1 85 -1 
85 -2 85 -1 85 -2 85 -2 85 -2 85 -4 85 -4 85 -5 
85 -8 85 -11 85 -15 85 -23 85 -31 85 -42 85 -54 584 2555 32 MP stroke
gr

c10
0 sg
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

 828  121 mt 
(Information Gain Computational Complexity) s
 153 2447 mt  -90 rotate
(Support of Experiment Space \(|Y|\) [#] ) s
90 rotate
%%IncludeResource: font Symbol
/Symbol /ISOLatin1Encoding 120 FMSR

 153  418 mt  -90 rotate
(\256) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

1135 2843 mt 
(Number of Participants \(n\) [#] ) s
%%IncludeResource: font Symbol
/Symbol /ISOLatin1Encoding 120 FMSR

2735 2843 mt 
(\256) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

 482 2598 mt 
( ) s
3459  258 mt 
( ) s
1 sg
0 514 1481 0 0 -514 559 790 4 MP
PP
-1481 0 0 514 1481 0 0 -514 559 790 5 MP stroke
4 w
DO
SO
6 w
0 sg
 559  790 mt 2040  790 L
 559  276 mt 2040  276 L
 559  790 mt  559  276 L
2040  790 mt 2040  276 L
 559  790 mt 2040  790 L
 559  790 mt  559  276 L
 559  790 mt 2040  790 L
 559  276 mt 2040  276 L
 559  790 mt  559  276 L
2040  790 mt 2040  276 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

1015  385 mt 
(IID) s
gs 559 276 1482 515 rc
c8
350 0 629 350 2 MP stroke
gr

c8
0 sg
1015  507 mt 
(Multinomial) s
gs 559 276 1482 515 rc
c4
350 0 629 472 2 MP stroke
gr

c4
0 sg
1015  628 mt 
(Monte Carlo - worst) s
gs 559 276 1482 515 rc
DA
c9
350 0 629 593 2 MP stroke
SO
gr

c9
0 sg
1015  750 mt 
(Monte Carlo - average) s
gs 559 276 1482 515 rc
c10
350 0 629 715 2 MP stroke
gr

c10

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
